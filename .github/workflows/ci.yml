name: CI
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["*"]
  release:
    types: [published]

jobs:
  build:
    name: Tests
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v3      
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: adopt@1.8

      - name: Setup Scala Native environment
        run: |
            sudo apt-get update
            sudo apt install clang           

      - name: Tests
        run: sbt test

      - name: Build native binary
        run: sbt nativeLink

  release:
    name: Release Maven artifacts
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'release' 
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v3      
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8
      - run: git fetch --unshallow
      - name: Publish ${{ github.ref }}
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  native_binaries:
    name: Build native binaries
    # needs: [build]
    # if: startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/main')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macOS-latest
            uploaded_filename: sn-demangler-apple-darwin
            local_path: sn-demangler-out
          - os: ubuntu-latest
            uploaded_filename: sn-demangler-x86_64-pc-linux
            local_path: modules/cli/target/native-2.13/sn-demangler-out
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v13
      - run: git fetch --tags || true
      - name: Setup Scala Native environment
        run: |
            sudo apt-get update
            sudo apt install clang
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Setup Scala Native environment
        run: brew install llvm
        if: ${{ matrix.os == 'macos-latest' }}

      - run: sbt nativeLink
        shell: bash
      
      - name: Create a "fat" binary for MacOS
        run: |
            lipo -create modules/cli/target/apple-m1-native-2.13/sn-demangler-out \
                         modules/cli/target/default-os-native-2.13/sn-demangler-out \
                 -out    ${{matrix.local_path}}
        if: ${{ matrix.os == 'macos-latest' }}

      - run: echo $(pwd)
        shell: bash
      
      - run: echo $(pwd)
        shell: file sn-demangler-out
        if: ${{ matrix.os == 'macos-latest' }}

      - uses: actions/upload-artifact@master
        with:
          path: ${{ matrix.local_path }}
          name: ${{ matrix.uploaded_filename }}

      # - name: Upload release
      #   uses: actions/upload-release-asset@v1.0.2
      #   if: github.event_name == 'release'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ${{ matrix.local_path }}
      #     asset_name: ${{ matrix.uploaded_filename }}
      #     asset_content_type: application/zip
